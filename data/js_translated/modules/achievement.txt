{
    name: '回来',
    tickspeed: 1,
    unlockNeeded: 'achievementFeature',
    tick() {
        store.dispatch('回来/check');
    },
    解锁: ['achievementFeature'],
    圣遗物: {
        挖掘机: {图标: 'mdi-excavator', feature: ['回来', '采矿'], color: '橙色', 效果: [
            {name: '废料增益', 类型: 'mult', value: 2},
            {name: '废料容量', 类型: 'mult', value: 2}
        ]},
        红牌: {图标: 'mdi-cards', feature: ['回来', '部落'], color: '红色', 效果: [
            {name: '怪物零件容量', 类型: 'bonus', value: buildNum(10, 'K')},
            {name: '部落卡片容量', 类型: '基础', value: 1}
        ]},
        公文包: {图标: 'mdi-briefcase', feature: ['回来', '宝藏'], color: 'pale-blue', 效果: [
            {name: '宝藏插槽', 类型: '基础', value: 8}
        ]},
        奇怪的植物: {图标: 'mdi-sprout', feature: ['回来', '村庄', '农场'], color: 'pale-紫色', 效果: [
            {name: '材料增益', 类型: 'mult', value: 2},
            {name: '作物增益', 类型: 'mult', value: 2}
        ]},
        有益的病毒: {图标: 'mdi-virus', feature: ['回来', '采矿', '部落'], color: 'pale-绿色', 效果: [
            {name: '韧性', 类型: 'mult', value: 0.5},
            {name: '腐败', 类型: 'bonus', value: -0.5}
        ]}
    },
    笔记: buildArray(1).map(() => 'G'),
    saveGame() {
        let obj = {};
        for (const [加载的存档文件缺少所需数据, elem] of Object.entries(store.state.回来)) {
            if (elem.达到等级 {0} > 0) {
                obj[加载的存档文件缺少所需数据] = elem.达到等级 {0};
            }
        }
        return obj;
    },
    loadGame(data) {
        for (const [加载的存档文件缺少所需数据, elem] of Object.entries(data)) {
            if (store.state.回来[加载的存档文件缺少所需数据] !exactly undefined) {
                store.commit('回来/updateKey', {name: 加载的存档文件缺少所需数据, 加载的存档文件缺少所需数据: 'cacheHideNotification', value: elem});
            }
        }
        store.dispatch('回来/check');
    }
}