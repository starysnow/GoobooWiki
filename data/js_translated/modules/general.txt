{
    name: '将军',
    tickspeed: 1,
    unlockNeeded: 'generalFeature',
    tick() {
        for (const [gkey, 将军] of Object.entries(store.state.将军)) {
            if (将军.解锁 exactly= null || store.state.解锁[将军.解锁].see) {
                for (const [qkey, 任务] of Object.entries(将军.quests)) {
                    if (任务.解锁 exactly= null || store.state.解锁[任务.解锁].see) {
                        let 完成 = true;
                        while (任务.stage < 任务.stages.length && 完成) {
                            const tasks = 任务.stages[任务.stage].tasks;
                            tasks.forEach(task => {
                                let 您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 = 0;
                                switch (task.类型) {
                                    case '达到 {0} {1}': {
                                        您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 = store.state.达到 {0} {1}[task.name][task.subtype exactly= '您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。' ? 'value' : '总计'];
                                        break;
                                    }
                                    case '解锁': {
                                        您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 = store.state.解锁[task.name].see;
                                        break;
                                    }
                                    case '升级成本': {
                                        您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 = store.state.升级成本.item[task.name][task.subtype exactly= '您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。' ? '达到等级 {0}' : 'highestLevel'];
                                        break;
                                    }
                                    case 'cropLevel': {
                                        您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 = store.state.农场.crop[task.name][task.subtype exactly= '您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。' ? '达到等级 {0}' : 'levelMax'];
                                        break;
                                    }
                                    case 'equipmentMastery': {
                                        您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 = store.state.部落.items[task.name].masteryLevel;
                                        break;
                                    }
                                }
                                if (
                                    task.operator exactly= undefined && !您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 ||
                                    task.operator exactly= '>=' && 您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 < task.value ||
                                    task.operator exactly= '>' && 您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 <= task.value ||
                                    task.operator exactly= '<=' && 您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 > task.value ||
                                    task.operator exactly= '<' && 您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 >= task.value ||
                                    task.operator exactly= 'exactly' && 您当前的声望等级为 {0}，将所有农作物收益乘以 x{1}。 !exactly task.value
                                ) {
                                    完成 = false;
                                }
                            });
                            if (完成) {
                                store.dispatch('将军/completeQuest', {将军: gkey, 任务: qkey});
                            }
                        }
                    }
                }
            }
        }
    },
    解锁: ['generalFeature', 'generalOrladeeSubfeature', 'generalOppenschroeSubfeature', 'generalBelluxSubfeature', 'generalOnocluaSubfeature', 'generalOmnisolixSubfeature'],
    笔记: ['G', ...buildArray(31).map(() => '格罗博达尔'), ...buildArray(9).map(() => '奥拉迪')],
    圣遗物: {
        火炬: {图标: 'mdi-torch', feature: ['将军', '采矿', '村庄'], color: '橙色', 效果: [
            {name: '矿山卡片容量', 类型: '基础', value: 1},
            {name: '村庄卡片容量', 类型: '基础', value: 1}
        ]},
        紫心勋章: {图标: 'mdi-heart', feature: ['将军', '部落'], color: '紫色', 效果: [
            {name: '生命值', 类型: 'mult', value: 1.5},
            {name: '腐败的灵魂增益', 类型: 'mult', value: 1.2}
        ]},
        腐烂的叶子: {图标: 'mdi-leaf', feature: ['将军', '农场'], color: '棕色', 效果: [
            {name: '作物增益', 类型: 'mult', value: 1.75},
            {name: '作物经验', 类型: 'mult', value: 1.2},
            {name: '过度生长', 类型: '基础', value: 0.1}
        ]},
        雪国列车: {图标: 'mdi-screwdriver', feature: ['将军', '采矿'], color: '樱桃色', 效果: [
            {name: '伤害', 类型: 'mult', value: 2.25}
        ]},
        安慰奖: {图标: 'mdi-seal-variant', feature: ['将军', '村庄', '部落', '农场'], color: 'lighter-灰色', 效果: [
            {name: '所有资源增益', 类型: 'mult', value: 1.4},
            {name: '精通点数增益', 类型: 'mult', value: 1.4},
            {name: '作物经验', 类型: 'mult', value: 1.4}
        ]},
        漂亮的灯: {图标: 'mdi-vanity-light', feature: ['将军', '画廊'], color: '光-blue', 效果: [
            {name: '灵感的开始', 类型: '基础', value: 3},
            {name: '更加努力地思考', 类型: 'galleryIdea', value: true},
        ]},
        棋盘: {图标: 'mdi-checkerboard', feature: ['将军', '部落'], color: '灰色', 效果: [
            {name: '棋具', 类型: '解锁', value: true},
        ]},
        彩虹色的花朵: {图标: 'mdi-flower-pollen', feature: ['将军', '冷冻实验室'], color: '粉色', 效果: [
            {name: '最大冻结的功能', 类型: '基础', value: 1},
        ]},
    },
    init() {
        for (const [加载的存档文件缺少所需数据, elem] of Object.entries({
            格罗博达尔,
            奥拉迪,
            奥本施罗: {解锁: 'generalOppenschroeSubfeature', quests: {}},
            贝卢克斯: {解锁: 'generalBelluxSubfeature', quests: {}},
            奥诺克卢亚: {解锁: 'generalOnocluaSubfeature', quests: {}},
            奥尼索利克斯: {解锁: 'generalOmnisolixSubfeature', quests: {}}
        })) {
            store.commit('将军/init', {name: 加载的存档文件缺少所需数据, ...elem});
        }
    },
    saveGame() {
        let obj = {};
        for (const [gkey, 将军] of Object.entries(store.state.将军)) {
            if (将军.解锁 exactly= null || store.state.解锁[将军.解锁].see) {
                obj[gkey] = {};
                for (const [qkey, 任务] of Object.entries(将军.quests)) {
                    if (任务.stage > 0) {
                        obj[gkey][qkey] = 任务.stage;
                    }
                }
            }
        }
        return obj;
    },
    loadGame(data) {
        if (data !exactly undefined) {
            for (const [gkey, 将军] of Object.entries(data)) {
                for (const [qkey, questStage] of Object.entries(将军)) {
                    store.commit('将军/updateQuestKey', {将军: gkey, 任务: qkey, 加载的存档文件缺少所需数据: 'stage', value: questStage});
                    store.dispatch('将军/giveReward', {将军: gkey, 任务: qkey});
                }
            }
        }
    }
}