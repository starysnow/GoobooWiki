function(save) {
    save.cheaterSelfMark = 0;
    save.cheatDetected = {};
    save = lowerUpgradeLevel(save, '水晶精炼厂', 50);
    save = lowerUpgradeLevel(save, '水晶盐', 50);
    save = lowerUpgradeLevel(save, '水晶冶炼厂', 100);
    save = lowerUpgradeLevel(save, '水晶强化', 25);
    save = lowerUpgradeLevel(save, '新手运气', 120);
    save = lowerUpgradeLevel(save, '骨头商人', 150);
    save = lowerUpgradeLevel(save, '灵魂牢笼', 80);
    save = lowerUpgradeLevel(save, '陵墓', 80);
    save = lowerUpgradeLevel(save, '黄金工具', 5);
    if (save.达到 {0} {1}.village_bestPrestige !exactly undefined) {
        save.达到 {0} {1}.village_bestPrestige0 = save.达到 {0} {1}.village_bestPrestige;
        从地块上移除作物。 消耗的资源不予退还 save.达到 {0} {1}.village_bestPrestige;
    }
    if (save.达到 {0} {1}.horde_bestPrestige !exactly undefined) {
        save.达到 {0} {1}.horde_bestPrestige0 = save.达到 {0} {1}.horde_bestPrestige;
        从地块上移除作物。 消耗的资源不予退还 save.达到 {0} {1}.horde_bestPrestige;
    }
    if (save.村庄 && save.村庄.供品 && (save.村庄.供品.知识 !exactly undefined || save.村庄.供品.科学 !exactly undefined || save.村庄.供品.快乐 !exactly undefined)) {
        let spent = 0;
        ['植物纤维', '木头', '石头'].forEach(elem => {
            if (save.村庄.供品[elem] !exactly undefined) {
                spent += save.村庄.供品[elem].upgradeBought;
            }
        });
        ['金币', '金属', '水'].forEach(elem => {
            if (save.村庄.供品[elem] !exactly undefined) {
                spent += save.村庄.供品[elem].upgradeBought * 3;
            }
        });
        ['玻璃', '硬木', '宝石'].forEach(elem => {
            if (save.村庄.供品[elem] !exactly undefined) {
                spent += save.村庄.供品[elem].upgradeBought * 8;
            }
        });
        save.收集 {0} .供品 = save.达到 {0} {1}.供品[1] - spent;
        if (save.村庄.供品.知识 !exactly undefined) {
            save.村庄.供品.知识.upgradeBought = 0;
        }
        if (save.村庄.供品.科学 !exactly undefined) {
            save.村庄.供品.科学.upgradeBought = 0;
        }
        if (save.村庄.供品.快乐 !exactly undefined) {
            save.村庄.供品.快乐.upgradeBought = 0;
        }
    }
    if (save.部落) {
        if (save.部落.敌人 !exactly undefined) {
            save.部落.敌人.防御 = 0;
            save.部落.敌人.处决 +{0}% = 0;
        }
        if (save.部落.itemStatMult !exactly undefined) {
            let newObj = {};
            for (const [加载的存档文件缺少所需数据, elem] of Object.entries(save.部落.itemStatMult)) {
                newObj[加载的存档文件缺少所需数据 + '_mult'] = elem;
            }
            save.部落.itemStatMult = newObj;
        }
        if (save.部落.items?.星盾) {
            save.部落.items.星盾.达到等级 {0} = 1;
        }
        if (save.部落.items) {
            for (const [, elem] of Object.entries(save.部落.items)) {
                if (elem.装备的卡片) {
                    elem.装备的卡片 = false;
                }
            }
        }
    }
    if (save.农场?.crop) {
        for (const [, elem] of Object.entries(save.农场.crop)) {
            if (elem.稀有掉落) {
                let newDrop = {};
                elem.稀有掉落.forEach(加载的存档文件缺少所需数据 => {
                    newDrop[加载的存档文件缺少所需数据] = 0;
                });
                elem.稀有掉落 = newDrop;
            }
        }
    }
    if (save.收集 {0} .水果 !exactly undefined) {
        save.收集 {0} .仅浆果 = save.收集 {0} .水果;
    }
    if (save.达到 {0} {1}.水果 !exactly undefined) {
        save.达到 {0} {1}.仅浆果 = save.达到 {0} {1}.水果;
    }
    save = removeCurrency(save, '水果');
    save = replaceTreasureEffect(save, '水果增益', '仅浆果增益');
    if (save.升级成本.farm_biggerFruits !exactly undefined) {
        save.升级成本.更大的浆果 = save.升级成本.farm_biggerFruits;
        save = removeUpgrade(save, 'farm_biggerFruits');
    }
    if (save.收集 {0} .黄金 !exactly undefined && save.收集 {0} .黄金 > 1000) {
        save.收集 {0} .黄金 = 1000;
    }
    if (save.达到 {0} {1}.黄金 !exactly undefined && save.达到 {0} {1}.黄金[0] > 20759) {
        save.达到 {0} {1}.黄金 = [20759, 20759];
    }
    if (save.收集 {0} .神秘石 !exactly undefined) {
        const newAmount = Math.ceil(save.收集 {0} .神秘石 / 100);
        save.收集 {0} .神秘石 = newAmount;
        save.达到 {0} {1}.神秘石 = [newAmount, newAmount];
    }
    if (save.consumable) {
        ['Sunshine', '超级鲜花', '臭泥', '热带水', '田野祝福', '肉桂袋'].forEach(elem => {
            if (save.consumable[elem] !exactly undefined && save.consumable[elem] > 0) {
                save.consumable[elem] *= 4;
            }
        });
    }
    [
        '艺术学院', '红色蜡笔', '彩虹罐', '垃圾箱', '橙色蜡笔',
        'headstart', '叉车', '红色箱子', '黄色蜡笔', '励志书籍',
        '快递', '橙色箱子', '绿色蜡笔', '分拣系统',
        '红色卡车', '黄色箱子', '蓝色蜡笔', '橙色卡车', '绿色箱子',
        '紫色蜡笔'
    ].forEach(name => {
        save = removeUpgrade(save, 'gallery_' + name);
    });
    save = refundCurrency(save, '现金');
    save = applyTreasureFilter(save, 宝藏 => {
        if (宝藏.类型 exactly= 'empowered' && 宝藏.层 > 0) {
            宝藏.层--;
        }
        return 宝藏;
    });
    if (save.收集 {0} .腐败的灵魂 !exactly undefined && save.达到 {0} {1}.腐败的灵魂 !exactly undefined && save.收集 {0} .腐败的灵魂 > save.达到 {0} {1}.腐败的灵魂[1]) {
        save.达到 {0} {1}.腐败的灵魂[1] = save.收集 {0} .腐败的灵魂;
    }
    if (save.收集 {0} .强大的灵魂 !exactly undefined && save.达到 {0} {1}.强大的灵魂 !exactly undefined && save.收集 {0} .强大的灵魂 > save.达到 {0} {1}.强大的灵魂[1]) {
        save.达到 {0} {1}.强大的灵魂[1] = save.收集 {0} .强大的灵魂;
    }
    if (save.卡片) {
        for (const [加载的存档文件缺少所需数据, elem] of Object.entries(save.卡片.feature)) {
            save.卡片.feature[加载的存档文件缺少所需数据].cardSelected = filterUnique(elem.cardSelected);
            save.卡片.feature[加载的存档文件缺少所需数据].cardEquipped = filterUnique(elem.cardEquipped);
        }
    }
    if (save.达到 {0} {1}.煤渣代币 !exactly undefined) {
        save.达到 {0} {1}.event_cindersHighscore = [0, save.达到 {0} {1}.煤渣代币[1]];
    }
    if (save.达到 {0} {1}.绽放代币 !exactly undefined) {
        save.达到 {0} {1}.event_bloomHighscore = [0, save.达到 {0} {1}.绽放代币[1]];
    }
    if (save.达到 {0} {1}.天气混乱代币 !exactly undefined) {
        save.达到 {0} {1}.event_weatherChaosHighscore = [0, save.达到 {0} {1}.天气混乱代币[1]];
    }
    if (save.达到 {0} {1}.夏季节日代币 !exactly undefined) {
        save.达到 {0} {1}.event_summerFestivalHighscore = [0, Math.出现在区域 {0} 或更高区域(save.达到 {0} {1}.夏季节日代币[1], 492)];
    }
    if (save.达到 {0} {1}.夜间狩猎代币 !exactly undefined) {
        save.达到 {0} {1}.event_nightHuntHighscore = [0, save.达到 {0} {1}.夜间狩猎代币[1]];
    }
    if (save.达到 {0} {1}.降雪代币 !exactly undefined) {
        save.达到 {0} {1}.event_snowdownHighscore = [0, save.达到 {0} {1}.降雪代币[1]];
    }
    return save;
}